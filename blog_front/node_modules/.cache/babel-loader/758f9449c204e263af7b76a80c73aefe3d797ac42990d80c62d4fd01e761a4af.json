{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shind\\\\OneDrive\\\\Desktop\\\\coding project\\\\blog post\\\\blog_front\\\\src\\\\Pages\\\\UpdatePost.js\",\n  _s = $RefreshSig$();\nimport { React, useRef, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdatePost() {\n  _s();\n  const OGPost = useLocation().state;\n  const TitleRef = useRef();\n  const ImageRef = useRef();\n  const PostTextRef = useRef();\n  const NPostCats = useRef([]);\n  const OGCats = OGPost.Cats.filter(Cat => Cat.categoryid !== 0);\n  const [Cats, setCats] = useState();\n  console.log(OGCats);\n\n  //runs only on mount\n  useEffect(() => {\n    GetAllCats();\n  }, []);\n  function addpost(event) {\n    event.preventDefault(); //prevent form from refreshing upon submit\n\n    //get form data\n    const Title = TitleRef.current.value;\n    const Image = ImageRef.current.files[0];\n    const PostText = PostTextRef.current.value;\n    const Author = OGPost.Username;\n\n    //append form data in FormData object, FD\n    const FD = new FormData();\n    FD.append('Image', Image);\n    FD.append('Title', Title);\n    FD.append('PostText', PostText);\n    FD.append('AuthorUsername', Author);\n    FD.append('Categories', NPostCats.current);\n\n    //send a POST request to backend to post the blog with data FD\n    fetch('http://localhost:3001/updateblog', {\n      method: 'POST',\n      body: FD\n    });\n  }\n  function GetAllCats() {\n    fetch('http://localhost:3001/getallcats').then(\n    //fetches all the categories from backend\n    res => {\n      return res.json();\n    }).then(response => {\n      const PostCats = response.res.filter(Cat => Cat.categoryid !== 0); //response is an array of Categories, and set PostCats to be all categories except All with CategoryID 0\n\n      setCats(PostCats); //sets the Categories state to the response\n    });\n  }\n\n  function AddCat(CatID) {\n    NPostCats.current.push(CatID);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Update your Blog! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addpost,\n      children: [\" \", \"Post Title: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        ref: TitleRef,\n        value: OGPost.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 95\n      }, this), \"Categories: \", OGPost.Cats.map(Cat => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => AddCat(Cat.categoryid)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), Cat.category]\n        }, Cat.categoryid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this);\n      }), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/jpeg;base64,${OGPost.Image}`,\n        alt: OGPost.ImageName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 95\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 158\n      }, this), \"New Image: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        required: true,\n        ref: ImageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 28\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        ref: PostTextRef,\n        rows: \"4\",\n        cols: \"50\",\n        value: OGPost.PostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 109\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdatePost, \"i6WGpP+P0OXoKE9IL/ruzIme4KQ=\", false, function () {\n  return [useLocation];\n});\n_c = UpdatePost;\nexport default UpdatePost;\nvar _c;\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useLocation","UpdatePost","OGPost","state","TitleRef","ImageRef","PostTextRef","NPostCats","OGCats","Cats","filter","Cat","categoryid","setCats","console","log","GetAllCats","addpost","event","preventDefault","Title","current","value","Image","files","PostText","Author","Username","FD","FormData","append","fetch","method","body","then","res","json","response","PostCats","AddCat","CatID","push","map","category","ImageName"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Pages/UpdatePost.js"],"sourcesContent":["import { React, useRef, useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction UpdatePost() {\r\n    const OGPost = useLocation().state;\r\n    const TitleRef = useRef();\r\n    const ImageRef = useRef();\r\n    const PostTextRef = useRef();\r\n    const NPostCats = useRef([]);\r\n    const OGCats = OGPost.Cats.filter(Cat => Cat.categoryid !== 0);\r\n    const [Cats, setCats] = useState();\r\n    console.log(OGCats)\r\n\r\n    //runs only on mount\r\n    useEffect(() => {\r\n        GetAllCats()\r\n    }, [])\r\n\r\n    function addpost (event) {\r\n        event.preventDefault(); //prevent form from refreshing upon submit\r\n\r\n        //get form data\r\n        const Title = TitleRef.current.value;\r\n        const Image = ImageRef.current.files[0];\r\n        const PostText = PostTextRef.current.value;\r\n        const Author = OGPost.Username;\r\n\r\n        //append form data in FormData object, FD\r\n        const FD = new FormData();\r\n        FD.append('Image', Image);\r\n        FD.append('Title', Title);\r\n        FD.append('PostText', PostText);\r\n        FD.append('AuthorUsername', Author);\r\n        FD.append('Categories', NPostCats.current);\r\n\r\n        //send a POST request to backend to post the blog with data FD\r\n        fetch('http://localhost:3001/updateblog', {\r\n            method: 'POST',\r\n            body: FD\r\n        })\r\n    }\r\n\r\n    function GetAllCats() {\r\n        fetch('http://localhost:3001/getallcats').then( //fetches all the categories from backend\r\n            res => {\r\n                return res.json()\r\n            }\r\n        ).then(\r\n            response => {\r\n                const PostCats = response.res.filter(Cat => Cat.categoryid !== 0) //response is an array of Categories, and set PostCats to be all categories except All with CategoryID 0\r\n                \r\n                setCats(PostCats) //sets the Categories state to the response\r\n            }\r\n        )\r\n    }\r\n\r\n    function AddCat(CatID) {\r\n        NPostCats.current.push(CatID)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            Update your Blog! <br />\r\n            <form onSubmit={addpost}> {/* form calls onSubmit() method on submittion of form */}\r\n                Post Title: <input type='text' required ref={TitleRef} value={OGPost.Title}/> <br />\r\n                {/* Displays the categories */}\r\n                Categories: {OGPost.Cats.map(Cat => {\r\n                    return (\r\n                        <div key={Cat.categoryid}>\r\n                            <input type='checkbox' onClick={() => AddCat(Cat.categoryid)} />\r\n                            {Cat.category}\r\n                        </div>\r\n                    )\r\n                })} <br />\r\n                <img src={`data:image/jpeg;base64,${OGPost.Image}`} alt={OGPost.ImageName} /> <br /> {/* Display the image base64 image data as an image */} <br />\r\n                New Image: <input type='file' required ref={ImageRef} /> <br />\r\n                <textarea required ref={PostTextRef} rows='4' cols='50' value={OGPost.PostText}></textarea> <br />\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}