{"ast":null,"code":"import _slicedToArray from\"C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{React,useRef,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Login(props){var UsernameRef=useRef();var PasswordRef=useRef();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isValid=_useState2[0],setState=_useState2[1];//isValid is initially set to true as error message is not displayed from the start\nfunction onSubmit(event){event.preventDefault();//prevent form from refreshing upon submit\n//get form data\nvar Username=UsernameRef.current.value;var Password=PasswordRef.current.value;//send post request with username and password in its body to check for username validity\nfetch('/login/'+Username+'/'+Password).then(function(res){return res.json();}).then(function(response){//get data about user\nvar Response=response.res;var Display=response.Display;if(Response){//if Reponse is not null, there is a username, thus, allow login\nprops.Login(Username,Display);}else{//otherwise username is not valid, set the validity state isValid to false to re-render and display error message\nsetState(false);}});}return/*#__PURE__*/_jsxs(\"div\",{children:[\"Welcome to the Login page! \",/*#__PURE__*/_jsx(\"br\",{}),isValid?null:/*#__PURE__*/_jsx(\"div\",{children:\"Incorrect Username or Password!\"}),\" \",/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[\" \",\"Username: \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,ref:UsernameRef}),\" \",/*#__PURE__*/_jsx(\"br\",{}),\"Password: \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,ref:PasswordRef}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"login\"})]})]});}export default Login;","map":{"version":3,"names":["React","useRef","useState","Login","props","UsernameRef","PasswordRef","isValid","setState","onSubmit","event","preventDefault","Username","current","value","Password","fetch","then","res","json","response","Response","Display"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Pages/Login.js"],"sourcesContent":["import { React, useRef, useState } from 'react';\r\n\r\nfunction Login(props) {\r\n    const UsernameRef = useRef();\r\n    const PasswordRef = useRef();\r\n    const [isValid, setState] = useState(true); //isValid is initially set to true as error message is not displayed from the start\r\n\r\n    function onSubmit(event){\r\n        event.preventDefault(); //prevent form from refreshing upon submit\r\n        \r\n        //get form data\r\n        const Username = UsernameRef.current.value;\r\n        const Password = PasswordRef.current.value;\r\n\r\n        //send post request with username and password in its body to check for username validity\r\n        fetch('/login/' + Username + '/' + Password).then(\r\n            res => {\r\n                return res.json()\r\n            }\r\n        ).then(\r\n            response => {\r\n\r\n                //get data about user\r\n                const Response = response.res\r\n                const Display = response.Display\r\n\r\n                if (Response) { //if Reponse is not null, there is a username, thus, allow login\r\n                    props.Login(Username, Display)\r\n                } else{ //otherwise username is not valid, set the validity state isValid to false to re-render and display error message\r\n                    setState(false)\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Welcome to the Login page! <br />\r\n            { isValid ? null : <div>Incorrect Username or Password!</div> } {/* only displays error message if isValid is false-Username/Password is invalid, displays null otherwise */}\r\n            <form onSubmit={onSubmit}> {/* form calls method onSubmit() on submittion of the form */}\r\n                Username: <input type='text' required ref={UsernameRef}/> <br />\r\n                Password: <input type='text' required ref={PasswordRef}/> <br />\r\n                <input type='submit' value='login' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":"yJAAA,OAASA,KAAK,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAAC,wFAEhD,QAASC,MAAK,CAACC,KAAK,CAAE,CAClB,GAAMC,YAAW,CAAGJ,MAAM,EAAE,CAC5B,GAAMK,YAAW,CAAGL,MAAM,EAAE,CAC5B,cAA4BC,QAAQ,CAAC,IAAI,CAAC,wCAAnCK,OAAO,eAAEC,QAAQ,eAAoB;AAE5C,QAASC,SAAQ,CAACC,KAAK,CAAC,CACpBA,KAAK,CAACC,cAAc,EAAE,CAAE;AAExB;AACA,GAAMC,SAAQ,CAAGP,WAAW,CAACQ,OAAO,CAACC,KAAK,CAC1C,GAAMC,SAAQ,CAAGT,WAAW,CAACO,OAAO,CAACC,KAAK,CAE1C;AACAE,KAAK,CAAC,SAAS,CAAGJ,QAAQ,CAAG,GAAG,CAAGG,QAAQ,CAAC,CAACE,IAAI,CAC7C,SAAAC,GAAG,CAAI,CACH,MAAOA,IAAG,CAACC,IAAI,EAAE,CACrB,CAAC,CACJ,CAACF,IAAI,CACF,SAAAG,QAAQ,CAAI,CAER;AACA,GAAMC,SAAQ,CAAGD,QAAQ,CAACF,GAAG,CAC7B,GAAMI,QAAO,CAAGF,QAAQ,CAACE,OAAO,CAEhC,GAAID,QAAQ,CAAE,CAAE;AACZjB,KAAK,CAACD,KAAK,CAACS,QAAQ,CAAEU,OAAO,CAAC,CAClC,CAAC,IAAK,CAAE;AACJd,QAAQ,CAAC,KAAK,CAAC,CACnB,CACJ,CAAC,CACJ,CAEL,CAEA,mBACI,kEAC+B,aAAM,CAC/BD,OAAO,CAAG,IAAI,cAAG,wDAA0C,kBAC7D,cAAM,QAAQ,CAAEE,QAAS,yCACX,cAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,MAAC,GAAG,CAAEJ,WAAY,EAAE,kBAAC,aAAM,2BACtD,cAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,MAAC,GAAG,CAAEC,WAAY,EAAE,kBAAC,aAAM,cAChE,cAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAG,GAClC,GACL,CAEd,CAEA,cAAeH,MAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}