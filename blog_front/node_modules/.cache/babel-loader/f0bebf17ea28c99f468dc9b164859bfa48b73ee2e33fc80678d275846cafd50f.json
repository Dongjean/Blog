{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Comment(props){var isViewerAuthor=props.CurrUser==props.CommentData.username;//isViewerAuthor is true if Data.CurrUser = Data.Username, AKA the viewer is the author of the post\n//function called to delete comment\nfunction DeleteComment(){return _DeleteComment.apply(this,arguments);}function _DeleteComment(){_DeleteComment=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:props.DeleteComment(props.CommentData.commentid);//passes on the data for deleting the comment to CommentsSection.js\ncase 1:case\"end\":return _context.stop();}}},_callee);}));return _DeleteComment.apply(this,arguments);}return/*#__PURE__*/ (//Display the comment\n_jsxs(\"div\",{children:[\"User: \",props.CommentData.displayname,\" \",/*#__PURE__*/_jsx(\"br\",{}),\"Comment: \",props.CommentData.comment,\" \",/*#__PURE__*/_jsx(\"br\",{}),isViewerAuthor?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:DeleteComment,children:\"Delete Comment\"}),\" \",/*#__PURE__*/_jsx(\"br\",{})]}):null]}));}export default Comment;","map":{"version":3,"names":["React","Comment","props","isViewerAuthor","CurrUser","CommentData","username","DeleteComment","commentid","displayname","comment"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Components/Comment.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Comment(props) {\r\n    const isViewerAuthor = (props.CurrUser == props.CommentData.username); //isViewerAuthor is true if Data.CurrUser = Data.Username, AKA the viewer is the author of the post\r\n\r\n    //function called to delete comment\r\n    async function DeleteComment() {\r\n        props.DeleteComment(props.CommentData.commentid) //passes on the data for deleting the comment to CommentsSection.js\r\n    }\r\n\r\n    return (\r\n        //Display the comment\r\n        <div>\r\n            User: {props.CommentData.displayname} <br />\r\n            Comment: {props.CommentData.comment} <br />\r\n\r\n            {/* Delete Comment button that shows only if the logged in user is the person who made the comment */}\r\n            {isViewerAuthor ? \r\n            <div>\r\n                <button onClick={DeleteComment}>Delete Comment</button> <br />\r\n            </div> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;"],"mappings":"kUAAA,MAAOA,MAAK,KAAM,OAAO,CAAC,wFAE1B,QAASC,QAAO,CAACC,KAAK,CAAE,CACpB,GAAMC,eAAc,CAAID,KAAK,CAACE,QAAQ,EAAIF,KAAK,CAACG,WAAW,CAACC,QAAS,CAAE;AAEvE;AAAA,QACeC,cAAa,mJAA5B,qIACIL,KAAK,CAACK,aAAa,CAACL,KAAK,CAACG,WAAW,CAACG,SAAS,CAAC,CAAC;AAAA,sDACpD,gDAED,oBACI;AACA,gCACWN,KAAK,CAACG,WAAW,CAACI,WAAW,kBAAE,aAAM,aAClCP,KAAK,CAACG,WAAW,CAACK,OAAO,kBAAE,aAAM,CAG1CP,cAAc,cACf,oCACI,eAAQ,OAAO,CAAEI,aAAc,4BAAwB,kBAAC,aAAM,GAC5D,CAAG,IAAI,GACX,EAEd,CAEA,cAAeN,QAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}