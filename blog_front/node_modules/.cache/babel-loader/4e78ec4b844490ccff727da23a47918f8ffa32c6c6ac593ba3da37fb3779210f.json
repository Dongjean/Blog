{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shind\\\\OneDrive\\\\Desktop\\\\coding project\\\\blog post\\\\blog_front\\\\src\\\\Pages\\\\PostBlog.js\",\n  _s = $RefreshSig$();\nimport { React, useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostBlog(props) {\n  _s();\n  const TitleRef = useRef();\n  const ImageRef = useRef();\n  const PostTextRef = useRef();\n  const [Cats, setCats] = useState(null);\n\n  //runs only on mount\n  useEffect(() => {\n    GetAllCats();\n  }, []);\n  function addpost(event) {\n    event.preventDefault(); //prevent form from refreshing upon submit\n\n    //get form data\n    const Title = TitleRef.current.value;\n    const Image = ImageRef.current.files[0];\n    const PostText = PostTextRef.current.value;\n    const Author = props.Author;\n\n    //append form data in FormData object, FD\n    const FD = new FormData();\n    FD.append('Image', Image);\n    FD.append('Title', Title);\n    FD.append('PostText', PostText);\n    FD.append('AuthorUsername', Author);\n\n    //send a POST request to backend to post the blog with data FD\n    fetch('http://localhost:3001/postblog', {\n      method: 'POST',\n      body: FD\n    });\n  }\n  function GetAllCats() {\n    fetch('http://localhost:3001/getallcats').then(\n    //fetches all the categories from backend\n    res => {\n      return res.json();\n    }).then(response => {\n      const AllCats = response.res; //response is an array of Categories\n      setCats(AllCats); //sets the Categories state to the response\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Create a Blog! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }, this), console.log(Cats), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addpost,\n      children: [\" \", \"Post Title: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        ref: TitleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 75\n      }, this), \"Categories: \", Cats ? Cats.map(Cat => {\n        {\n          console.log(Cat);\n        }\n        /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, Cat.categoryid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }, this), \"Post Image: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        required: true,\n        ref: ImageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 75\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        ref: PostTextRef,\n        rows: \"4\",\n        cols: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 85\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(PostBlog, \"sszv5tRAa7obQYTD85WTdnCG3kY=\");\n_c = PostBlog;\nexport default PostBlog;\nvar _c;\n$RefreshReg$(_c, \"PostBlog\");","map":{"version":3,"names":["React","useRef","useState","useEffect","PostBlog","props","TitleRef","ImageRef","PostTextRef","Cats","setCats","GetAllCats","addpost","event","preventDefault","Title","current","value","Image","files","PostText","Author","FD","FormData","append","fetch","method","body","then","res","json","response","AllCats","console","log","map","Cat","categoryid"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Pages/PostBlog.js"],"sourcesContent":["import { React, useRef, useState, useEffect } from 'react';\r\n\r\nfunction PostBlog(props) {\r\n    const TitleRef = useRef();\r\n    const ImageRef = useRef();\r\n    const PostTextRef = useRef();\r\n    const [Cats, setCats] = useState(null)\r\n\r\n    //runs only on mount\r\n    useEffect(() => {\r\n        GetAllCats()\r\n    }, [])\r\n    function addpost (event) {\r\n        event.preventDefault(); //prevent form from refreshing upon submit\r\n\r\n        //get form data\r\n        const Title = TitleRef.current.value;\r\n        const Image = ImageRef.current.files[0];\r\n        const PostText = PostTextRef.current.value;\r\n        const Author = props.Author;\r\n\r\n        //append form data in FormData object, FD\r\n        const FD = new FormData();\r\n        FD.append('Image', Image);\r\n        FD.append('Title', Title);\r\n        FD.append('PostText', PostText);\r\n        FD.append('AuthorUsername', Author);\r\n\r\n        //send a POST request to backend to post the blog with data FD\r\n        fetch('http://localhost:3001/postblog', {\r\n            method: 'POST',\r\n            body: FD\r\n        })\r\n    }\r\n\r\n    function GetAllCats() {\r\n        fetch('http://localhost:3001/getallcats').then( //fetches all the categories from backend\r\n            res => {\r\n                return res.json()\r\n            }\r\n        ).then(\r\n            response => {\r\n                const AllCats = response.res //response is an array of Categories\r\n                setCats(AllCats) //sets the Categories state to the response\r\n            }\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            Create a Blog! <br />\r\n            {console.log(Cats)}\r\n            <form onSubmit={addpost}> {/* form calls onSubmit() method on submittion of form */}\r\n                Post Title: <input type='text' required ref={TitleRef} /> <br />\r\n                Categories: {Cats ? Cats.map(Cat => {\r\n                    {console.log(Cat)}\r\n                    <div>\r\n                    <input type='checkbox' key={Cat.categoryid} />\r\n                    </div>\r\n                }) : <div>hi</div>} <br />\r\n                Post Image: <input type='file' required ref={ImageRef} /> <br />\r\n                <textarea required ref={PostTextRef} rows='4' cols='50'></textarea> <br />\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostBlog;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}