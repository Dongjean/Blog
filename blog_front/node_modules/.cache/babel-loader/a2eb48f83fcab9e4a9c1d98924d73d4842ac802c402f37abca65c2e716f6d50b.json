{"ast":null,"code":"import _slicedToArray from\"C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//Pages imports\nimport LoginPage from'./Pages/Login.js';import MainPage from'./Pages/Main.js';import SignupPage from'./Pages/Signup.js';import PostBlogPage from'./Pages/PostBlog.js';import OpenBlogPage from'./Pages/OpenBlog.js';import UpdatePostPage from'./Pages/UpdatePost.js';import AddCategory from'./Components/AddCategory.js';import{Routes,Route,useNavigate,Link}from'react-router-dom';import{React,useState}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var CurrUser=null;var Display=null;function App(){var navigate=useNavigate();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLogin=_useState2[0],setLoginState=_useState2[1];//for when Client is to be rerouted back to the home page logged in to an account\nfunction Login(Username,DisplayName){//set the current logged in user and its corresponding display name\nCurrUser=Username;Display=DisplayName;setLoginState(true);//set the Login State to true to rerender the page with updated login information\nnavigate('/');//reroute to home page\n}//for when user wants to logout\nfunction Logout(){//set the current logged in user and its corresponding display name to null\nDisplay=null;CurrUser=null;setLoginState(false);//set the Login State to false to rerender the page with updated login information\nnavigate('/');//reroute to home page\n}//for when user is opening up a specific blog from the home page\nfunction OpenBlog(Post){var Data=Post;Data.CurrUser=CurrUser;//adds CurrUser to Data\nnavigate('/openblog',{state:Data});}//function for updating a post\nfunction UpdatePost(Post,Cats){var Data=Post;Data.Cats=Cats;//adds Cats to Data\nnavigate('/updatepost',{state:Data});}return/*#__PURE__*/_jsxs(\"div\",{children:[isLogin?/*#__PURE__*/_jsxs(\"div\",{children:[\"Hello, \",Display,\"!\"]}):null,\" \",/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"}),\" \",/*#__PURE__*/_jsx(Link,{to:\"signup\",children:\"Singup\"}),\" \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login\"}),\" \",isLogin?/*#__PURE__*/_jsx(Link,{to:\"/postblog\",children:\"Post\"}):null,\" \",isLogin?/*#__PURE__*/_jsx(Link,{to:\"/createcategory\",children:\"Create-Category\"}):null,\" \",isLogin?/*#__PURE__*/_jsx(\"button\",{onClick:Logout,children:\"Logout\"}):null,\" \",/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,element:/*#__PURE__*/_jsx(MainPage,{OpenBlog:OpenBlog,UpdatePost:UpdatePost,CurrUser:CurrUser})}),\" \",/*#__PURE__*/_jsx(Route,{path:\"/signup\",exact:true,element:/*#__PURE__*/_jsx(SignupPage,{Login:Login})}),\" \",/*#__PURE__*/_jsx(Route,{path:\"/login\",exact:true,element:/*#__PURE__*/_jsx(LoginPage,{Login:Login})}),\" \",/*#__PURE__*/_jsx(Route,{path:\"/postblog\",exact:true,element:/*#__PURE__*/_jsx(PostBlogPage,{Login:Login,DisplayName:Display,Author:CurrUser})}),\" \",/*#__PURE__*/_jsx(Route,{path:\"/openblog\",exact:true,element:/*#__PURE__*/_jsx(OpenBlogPage,{Login:Login,UpdatePost:UpdatePost})}),\" \",/*#__PURE__*/_jsx(Route,{path:\"/createcategory\",exact:true,element:/*#__PURE__*/_jsx(AddCategory,{Login:Login,CurrUser:CurrUser,DisplayName:Display})}),\" \",/*#__PURE__*/_jsx(Route,{path:\"/updatepost\",exact:true,element:/*#__PURE__*/_jsx(UpdatePostPage,{Login:Login,CurrUser:CurrUser,DisplayName:Display})}),\" \"]})]});}export default App;","map":{"version":3,"names":["LoginPage","MainPage","SignupPage","PostBlogPage","OpenBlogPage","UpdatePostPage","AddCategory","Routes","Route","useNavigate","Link","React","useState","CurrUser","Display","App","navigate","isLogin","setLoginState","Login","Username","DisplayName","Logout","OpenBlog","Post","Data","state","UpdatePost","Cats"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/App.js"],"sourcesContent":["//Pages imports\nimport LoginPage from './Pages/Login.js';\nimport MainPage from './Pages/Main.js';\nimport SignupPage from './Pages/Signup.js';\nimport PostBlogPage from './Pages/PostBlog.js';\nimport OpenBlogPage from './Pages/OpenBlog.js';\nimport UpdatePostPage from './Pages/UpdatePost.js';\nimport AddCategory from './Components/AddCategory.js';\n\n\nimport {Routes, Route, useNavigate, Link} from 'react-router-dom';\nimport {React, useState} from 'react';\n\nvar CurrUser = null;\nvar Display = null;\n\nfunction App() {\n  const navigate = useNavigate();\n  const [isLogin, setLoginState] = useState(false);\n\n  //for when Client is to be rerouted back to the home page logged in to an account\n  function Login(Username, DisplayName) {\n\n    //set the current logged in user and its corresponding display name\n    CurrUser = Username\n    Display = DisplayName\n\n    setLoginState(true) //set the Login State to true to rerender the page with updated login information\n    navigate('/') //reroute to home page\n  }\n\n  //for when user wants to logout\n  function Logout() {\n\n    //set the current logged in user and its corresponding display name to null\n    Display = null;\n    CurrUser = null;\n\n    setLoginState(false) //set the Login State to false to rerender the page with updated login information\n    navigate('/') //reroute to home page\n  }\n\n  //for when user is opening up a specific blog from the home page\n  function OpenBlog(Post) {\n    var Data = Post;\n    Data.CurrUser = CurrUser; //adds CurrUser to Data\n    navigate('/openblog', {state: Data})\n  }\n  \n  //function for updating a post\n  function UpdatePost(Post, Cats) {\n    var Data = Post;\n    Data.Cats = Cats; //adds Cats to Data\n    navigate('/updatepost', {state: Data})\n  }\n  \n  return (\n    <div>\n      { isLogin ? <div>Hello, {Display}!</div> : null } {/* display this only if isLogin is true-the user is logged in, display null otherwise */}\n      <Link to='/'>Home</Link> {/* Link to Home Page */}\n      <Link to='signup'>Singup</Link> {/* Link to Signup Page */}\n      <Link to='/login'>Login</Link> {/* Link to Login Page */}\n      { isLogin ? <Link to='/postblog'>Post</Link> : null } {/* Link to the Page to post a blog, this Link is only display if isLogin is true-if a user is logged in, displaying null otherwise */}\n      { isLogin ? <Link to='/createcategory'>Create-Category</Link> : null } {/* Display the Create Category button only if isLogin is true-if there is a user logged in */}\n      { isLogin ? <button onClick={Logout}>Logout</button> : null } {/* Display the Logout button only if isLogin is true-if there is a user logged in */}\n\n      <Routes>\n        <Route path='/' exact element={<MainPage OpenBlog={OpenBlog} UpdatePost={UpdatePost} CurrUser={CurrUser} />} /> {/* Route to the Main Page*/}\n        <Route path='/signup' exact element={<SignupPage Login={Login} />} /> {/* Route to the Signup Page*/}\n        <Route path='/login' exact element={<LoginPage Login={Login} />} /> {/* Route to the Login Page */}\n        <Route path='/postblog' exact element={<PostBlogPage Login={Login} DisplayName={Display} Author={CurrUser} />} /> {/* Route to the Page to post a blog*/}\n        <Route path='/openblog' exact element={<OpenBlogPage Login={Login} UpdatePost={UpdatePost} />} /> {/* Route to the Page for an opened blog */}\n        <Route path='/createcategory' exact element={<AddCategory Login={Login} CurrUser={CurrUser} DisplayName={Display} />} /> {/* Route to the Page to create a new category */}\n        <Route path='/updatepost' exact element={<UpdatePostPage Login={Login} CurrUser={CurrUser} DisplayName={Display} />} /> {/* Route to the Page to update a Post */}\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}