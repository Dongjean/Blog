{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shind\\\\OneDrive\\\\Desktop\\\\coding project\\\\blog post\\\\blog_front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport LoginPage from './Pages/Login.js';\nimport MainPage from './Pages/Main.js';\nimport SignupPage from './Pages/Signup.js';\nimport PostBlogPage from './Pages/PostBlog.js';\nimport OpenBlogPage from './Pages/OpenBlog.js';\nimport { Routes, Route, useNavigate, Link } from 'react-router-dom';\nimport { React, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CurrUser = null;\nvar Display = null;\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  const [isLogin, setLoginState] = useState(false);\n  const [OpenedBlogPost, setOpenedBlogPost] = useState(null);\n\n  //for when login request is successful\n  function Login(Username, DisplayName) {\n    //set the current logged in user and its corresponding display name\n    CurrUser = Username;\n    Display = DisplayName;\n    setLoginState(true); //set the Login State to true to rerender the page with updated login information\n    navigate('/'); //reroute to home page\n  }\n\n  //for when user wants to logout\n  function Logout() {\n    //set the current logged in user and its corresponding display name to null\n    Display = null;\n    CurrUser = null;\n    setLoginState(false); //set the Login State to false to rerender the page with updated login information\n    navigate('/'); //reroute to home page\n  }\n\n  //for when user is opening up a specific blog from the home page\n  function OpenBlog(Post) {\n    //setOpenedBlogPost(Post) //set the OpenedBlogPost State to the JSON object Post to rerender the page with updated information\n    console.log(Post);\n    navigate('/openblog', {\n      state: Post\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLogin ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Hello, \", Display, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this) : null, \" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"signup\",\n      children: \"Singup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \" \", isLogin ? /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/postblog\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this) : null, \" \", isLogin ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this) : null, \" \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(MainPage, {\n          OpenBlog: OpenBlog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(SignupPage, {\n          Login: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          Login: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/postblog\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(PostBlogPage, {\n          Author: CurrUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/openblog\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(OpenBlogPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Qvegq9freRGtFyNWmOkQJkCa12M=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["LoginPage","MainPage","SignupPage","PostBlogPage","OpenBlogPage","Routes","Route","useNavigate","Link","React","useState","CurrUser","Display","App","navigate","isLogin","setLoginState","OpenedBlogPost","setOpenedBlogPost","Login","Username","DisplayName","Logout","OpenBlog","Post","console","log","state"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/App.js"],"sourcesContent":["import LoginPage from './Pages/Login.js';\nimport MainPage from './Pages/Main.js';\nimport SignupPage from './Pages/Signup.js';\nimport PostBlogPage from './Pages/PostBlog.js';\nimport OpenBlogPage from './Pages/OpenBlog.js'\nimport {Routes, Route, useNavigate, Link} from 'react-router-dom';\nimport {React, useState} from 'react';\n\nvar CurrUser = null;\nvar Display = null;\n\nfunction App() {\n  const navigate = useNavigate();\n  const [isLogin, setLoginState] = useState(false);\n  const [OpenedBlogPost, setOpenedBlogPost] = useState(null);\n\n\n  //for when login request is successful\n  function Login(Username, DisplayName) {\n\n    //set the current logged in user and its corresponding display name\n    CurrUser = Username\n    Display = DisplayName\n\n    setLoginState(true) //set the Login State to true to rerender the page with updated login information\n    navigate('/') //reroute to home page\n  }\n\n  //for when user wants to logout\n  function Logout() {\n\n    //set the current logged in user and its corresponding display name to null\n    Display = null;\n    CurrUser = null;\n\n    setLoginState(false) //set the Login State to false to rerender the page with updated login information\n    navigate('/') //reroute to home page\n  }\n\n  //for when user is opening up a specific blog from the home page\n  function OpenBlog(Post) {\n    //setOpenedBlogPost(Post) //set the OpenedBlogPost State to the JSON object Post to rerender the page with updated information\n    console.log(Post)\n    navigate('/openblog', {state: Post})\n  }\n  return (\n    <div>\n      { isLogin ? <div>Hello, {Display}!</div> : null } {/* display this only if isLogin is true-the user is logged in, display null otherwise */}\n      <Link to='/'>Home</Link> {/* Link to Home Page */}\n      <Link to='signup'>Singup</Link> {/* Link to Signup Page */}\n      <Link to='/login'>Login</Link> {/* Link to Login Page */}\n      { isLogin ? <Link to='/postblog'>Post</Link> : null } {/* Link to the Page to post a blog, this Link is only display if isLogin is true-if a user is logged in, displaying null otherwise */}\n      { isLogin ? <button onClick={Logout}>Logout</button> : null } {/* Display the Logout button only if isLogin is true-if there is a user logged in */}\n\n      <Routes>\n        <Route path='/' exact element={<MainPage OpenBlog={OpenBlog} />} /> {/* Route to the Main Page*/}\n        <Route path='/signup' exact element={<SignupPage Login={Login} />} /> {/* Route to the Signup Page*/}\n        <Route path='/login' exact element={<LoginPage Login={Login} />} /> {/* Route to the Login Page */}\n        <Route path='/postblog' exact element={<PostBlogPage Author={CurrUser}/>} /> {/* Route to the Page to post a blog*/}\n        <Route path='/openblog' exact element={<OpenBlogPage />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}