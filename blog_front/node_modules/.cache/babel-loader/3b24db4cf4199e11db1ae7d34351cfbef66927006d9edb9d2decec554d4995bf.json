{"ast":null,"code":"import _slicedToArray from\"C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//Components imports\nimport UpdateCategory from'../Components/UpdateCategory.js';import{React,useRef,useState,useEffect}from'react';import{useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UpdatePost(props){var OGPost=useLocation().state;var TitleRef=useRef();var ImageRef=useRef();var PostTextRef=useRef();var OGCats=OGPost.Cats.filter(function(Cat){return Cat.categoryid!==0;});var SelectedCatsRef=useRef(OGCats);var UnselectedCatsRef=useRef();var _useState=useState(),_useState2=_slicedToArray(_useState,2),UnselectedCats=_useState2[0],setUnselectedCats=_useState2[1];var _useState3=useState(SelectedCatsRef.current),_useState4=_slicedToArray(_useState3,2),SelectedCats=_useState4[0],setSelectedCats=_useState4[1];//runs only on mount\nuseEffect(function(){GetAllCats();},[]);function addpost(event){event.preventDefault();//prevent form from refreshing upon submit\n//get form data\nvar Title=TitleRef.current.value;var Image=ImageRef.current.files[0];var PostText=PostTextRef.current.value;var Author=OGPost.Username;//append form data in FormData object, FD\nvar FD=new FormData();FD.append('Image',Image);FD.append('Title',Title);FD.append('PostText',PostText);FD.append('AuthorUsername',Author);FD.append('Categories',JSON.stringify(SelectedCatsRef.current));FD.append('PostID',OGPost.PostID);//send a POST request to backend to post the blog with data FD\nfetch('http://localhost:3001/updateblog',{method:'POST',body:FD}).then(function(res){return res.json();}).then(props.Login(props.CurrUser,props.DisplayName));}//gets all categories\nfunction GetAllCats(){fetch('http://localhost:3001/getallcats').then(//fetches all the categories from backend\nfunction(res){return res.json();}).then(function(response){var temp=response.res.filter(function(Cat){return Cat.categoryid!==0;});//response.res is an array of Categories, and set temp to be all categories except All with CategoryID 0\nvar tempOGCatIDs=OGCats.map(function(Cat){return Cat.categoryid;});//gets a temporary array of all of the originally selected categoryIDs\nvar PostCats=temp.filter(function(Cat){return!tempOGCatIDs.includes(Cat.categoryid);});//creates a new array storing all the initially unselected categories\nUnselectedCatsRef.current=PostCats;setUnselectedCats(PostCats);//sets the Categories state to the response\n});}//function for selecting a category\nfunction SelectCat(CatID,CatName){//updating the useRef values\nSelectedCatsRef.current.push({categoryid:CatID,category:CatName});UnselectedCatsRef.current=UnselectedCatsRef.current.filter(function(UnselectedCat){return UnselectedCat.categoryid!==CatID;});//setting the states so components get re-rendered\nsetUnselectedCats(UnselectedCatsRef.current);setSelectedCats(SelectedCatsRef.current);}//function for deselecting a category\nfunction DeselectCat(CatID,CatName){//updating the useRef values\nSelectedCatsRef.current=SelectedCatsRef.current.filter(function(NPostCat){return NPostCat.categoryid!==CatID;});UnselectedCatsRef.current.push({categoryid:CatID,category:CatName});//setting the states so components get re-rendered\nsetUnselectedCats(UnselectedCatsRef.current);setSelectedCats(SelectedCatsRef.current);}return/*#__PURE__*/_jsxs(\"div\",{children:[\"Update your Blog! \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:addpost,children:[\" \",\"Post Title: \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,ref:TitleRef,placeholder:OGPost.Title}),\" \",/*#__PURE__*/_jsx(\"br\",{}),SelectedCats?SelectedCats.map(function(Cat){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(UpdateCategory,{SelectCat:SelectCat,DeselectCat:DeselectCat,Cat:Cat,Checked:true})},Cat.categoryid);}):null,UnselectedCats?UnselectedCats.map(function(Cat){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(UpdateCategory,{SelectCat:SelectCat,DeselectCat:DeselectCat,Cat:Cat,Checked:false})},Cat.categoryid);}):null,/*#__PURE__*/_jsx(\"img\",{src:\"data:image/jpeg;base64,\".concat(OGPost.Image),alt:OGPost.ImageName}),\" \",/*#__PURE__*/_jsx(\"br\",{}),\" \",\" \",/*#__PURE__*/_jsx(\"br\",{}),\"New Image: \",/*#__PURE__*/_jsx(\"input\",{type:\"file\",required:true,ref:ImageRef}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{required:true,ref:PostTextRef,rows:\"4\",cols:\"50\",placeholder:OGPost.PostText}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"submit\"})]})]});}export default UpdatePost;","map":{"version":3,"names":["UpdateCategory","React","useRef","useState","useEffect","useLocation","UpdatePost","props","OGPost","state","TitleRef","ImageRef","PostTextRef","OGCats","Cats","filter","Cat","categoryid","SelectedCatsRef","UnselectedCatsRef","UnselectedCats","setUnselectedCats","current","SelectedCats","setSelectedCats","GetAllCats","addpost","event","preventDefault","Title","value","Image","files","PostText","Author","Username","FD","FormData","append","JSON","stringify","PostID","fetch","method","body","then","res","json","Login","CurrUser","DisplayName","response","temp","tempOGCatIDs","map","PostCats","includes","SelectCat","CatID","CatName","push","category","UnselectedCat","DeselectCat","NPostCat","ImageName"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Pages/UpdatePost.js"],"sourcesContent":["//Components imports\r\nimport UpdateCategory from '../Components/UpdateCategory.js';\r\n\r\nimport { React, useRef, useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction UpdatePost(props) {\r\n    const OGPost = useLocation().state;\r\n    const TitleRef = useRef();\r\n    const ImageRef = useRef();\r\n    const PostTextRef = useRef();\r\n    const OGCats = OGPost.Cats.filter(Cat => Cat.categoryid !== 0);\r\n\r\n    const SelectedCatsRef = useRef(OGCats);\r\n    const UnselectedCatsRef = useRef();\r\n    const [UnselectedCats, setUnselectedCats] = useState();\r\n    const [SelectedCats, setSelectedCats] = useState(SelectedCatsRef.current);\r\n\r\n    //runs only on mount\r\n    useEffect(() => {\r\n        GetAllCats()\r\n    }, [])\r\n\r\n    function addpost (event) {\r\n        event.preventDefault(); //prevent form from refreshing upon submit\r\n\r\n        //get form data\r\n        const Title = TitleRef.current.value;\r\n        const Image = ImageRef.current.files[0];\r\n        const PostText = PostTextRef.current.value;\r\n        const Author = OGPost.Username;\r\n\r\n        //append form data in FormData object, FD\r\n        const FD = new FormData();\r\n        FD.append('Image', Image);\r\n        FD.append('Title', Title);\r\n        FD.append('PostText', PostText);\r\n        FD.append('AuthorUsername', Author);\r\n        FD.append('Categories', JSON.stringify(SelectedCatsRef.current));\r\n        FD.append('PostID', OGPost.PostID)\r\n\r\n        //send a POST request to backend to post the blog with data FD\r\n        fetch('http://localhost:3001/updateblog', {\r\n            method: 'POST',\r\n            body: FD\r\n        }).then(\r\n            res => res.json()\r\n        ).then(\r\n            props.Login(props.CurrUser, props.DisplayName)\r\n        )\r\n    }\r\n\r\n    //gets all categories\r\n    function GetAllCats() {\r\n\r\n        fetch('http://localhost:3001/getallcats').then( //fetches all the categories from backend\r\n            res => res.json()\r\n        ).then(\r\n            response => {\r\n                const temp = response.res.filter(Cat => Cat.categoryid !== 0) //response.res is an array of Categories, and set temp to be all categories except All with CategoryID 0\r\n                const tempOGCatIDs = OGCats.map(Cat => Cat.categoryid) //gets a temporary array of all of the originally selected categoryIDs\r\n                const PostCats = temp.filter(Cat => !tempOGCatIDs.includes(Cat.categoryid)) //creates a new array storing all the initially unselected categories\r\n\r\n                UnselectedCatsRef.current = PostCats\r\n                setUnselectedCats(PostCats) //sets the Categories state to the response\r\n            }\r\n        )\r\n    }\r\n\r\n    //function for selecting a category\r\n    function SelectCat(CatID, CatName) {\r\n        //updating the useRef values\r\n        SelectedCatsRef.current.push({categoryid: CatID, category: CatName}) \r\n        UnselectedCatsRef.current = UnselectedCatsRef.current.filter(UnselectedCat => UnselectedCat.categoryid !== CatID)\r\n\r\n        //setting the states so components get re-rendered\r\n        setUnselectedCats(UnselectedCatsRef.current)\r\n        setSelectedCats(SelectedCatsRef.current)\r\n    }\r\n\r\n    //function for deselecting a category\r\n    function DeselectCat(CatID, CatName) {\r\n        //updating the useRef values\r\n        SelectedCatsRef.current = SelectedCatsRef.current.filter(NPostCat => NPostCat.categoryid !== CatID)\r\n        UnselectedCatsRef.current.push({categoryid: CatID, category: CatName})\r\n\r\n        //setting the states so components get re-rendered\r\n        setUnselectedCats(UnselectedCatsRef.current)\r\n        setSelectedCats(SelectedCatsRef.current)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            Update your Blog! <br />\r\n            <form onSubmit={addpost}> {/* form calls onSubmit() method on submittion of form */}\r\n                Post Title: <input type='text' required ref={TitleRef} placeholder={OGPost.Title}/> <br />\r\n\r\n                {/* Displays the Selectedcategories */}\r\n                {SelectedCats ? SelectedCats.map(Cat => {\r\n                    return (\r\n                        <div key={Cat.categoryid}>\r\n                            <UpdateCategory SelectCat={SelectCat} DeselectCat={DeselectCat} Cat={Cat} Checked={true} />\r\n                        </div>\r\n                    )\r\n                }) : null}\r\n\r\n                {/* Displays the Selectedcategories */}\r\n                {UnselectedCats ? UnselectedCats.map(Cat => {\r\n                    return (\r\n                        <div key={Cat.categoryid}>\r\n                            <UpdateCategory SelectCat={SelectCat} DeselectCat={DeselectCat} Cat={Cat} Checked={false} />\r\n                        </div>\r\n                    )\r\n                }) : null}\r\n\r\n                <img src={`data:image/jpeg;base64,${OGPost.Image}`} alt={OGPost.ImageName} /> <br /> {/* Display the image base64 image data as an image */} <br />\r\n                New Image: <input type='file' required ref={ImageRef} /> <br />\r\n                <textarea required ref={PostTextRef} rows='4' cols='50' placeholder={OGPost.PostText}></textarea> <br />\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}