{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shind\\\\OneDrive\\\\Desktop\\\\coding project\\\\blog post\\\\blog_front\\\\src\\\\pages\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport { React, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup(props) {\n  _s();\n  const NUserRef = useRef();\n  const NPWRef = useRef();\n  const NPW2Ref = useRef();\n  const NDisplayRef = useRef();\n  const [isPWValid, setPWState] = useState(true);\n  const [isUserValid, setUserState] = useState(true);\n  function onSubmit(event) {\n    event.preventDefault();\n    const NUser = NUserRef.current.value;\n    const NPW = NPWRef.current.value;\n    const NPW2 = NPW2Ref.current.value;\n    const NDisplay = NDisplayRef.current.value;\n\n    //validity check for PW\n    if (NPW !== NPW2) {\n      setPWState(false);\n      return;\n    } else {\n      if (!isPWValid) {\n        setPWState(true);\n      }\n    }\n\n    //validity check for Username\n    fetch('http://localhost:3001/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        NUsername: NUser,\n        NPassword: NPW,\n        NDisplay: NDisplay,\n        isPWValid: isPWValid\n      })\n    }).then(res => {\n      return res.json();\n    }).then(response => {\n      const Response = response.res;\n      if (Response) {\n        if (isPWValid) {\n          props.GrantAccess(NUser);\n        } else {\n          setUserState(true);\n        }\n      } else {\n        setUserState(false);\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Welcome to the Signup page! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 41\n    }, this), isUserValid ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"The Username is unavailable!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 36\n    }, this), isPWValid ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"The Passwords do not match!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [\"New Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        ref: NUserRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 31\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 77\n      }, this), \"New Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        ref: NPWRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 75\n      }, this), \"Confirm Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        ref: NPW2Ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 35\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 80\n      }, this), \"Display Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        ref: NDisplayRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 31\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 80\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"IG2qIgxhevVuNiP6zRVA6wvWMSM=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useRef","useState","Signup","props","NUserRef","NPWRef","NPW2Ref","NDisplayRef","isPWValid","setPWState","isUserValid","setUserState","onSubmit","event","preventDefault","NUser","current","value","NPW","NPW2","NDisplay","fetch","method","headers","body","JSON","stringify","NUsername","NPassword","then","res","json","response","Response","GrantAccess"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/pages/Signup.js"],"sourcesContent":["import { React, useRef, useState } from 'react';\r\n\r\nfunction Signup(props) {\r\n    const NUserRef = useRef();\r\n    const NPWRef = useRef();\r\n    const NPW2Ref = useRef();\r\n    const NDisplayRef = useRef();\r\n\r\n    const [isPWValid, setPWState] = useState(true);\r\n    const [isUserValid, setUserState] = useState(true);\r\n\r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const NUser = NUserRef.current.value\r\n        const NPW = NPWRef.current.value\r\n        const NPW2 = NPW2Ref.current.value\r\n        const NDisplay = NDisplayRef.current.value\r\n\r\n        //validity check for PW\r\n        if (NPW !== NPW2) {\r\n            setPWState(false)\r\n            return\r\n        } else {\r\n            if (!isPWValid) {\r\n                setPWState(true)\r\n            }\r\n        }\r\n\r\n        //validity check for Username\r\n        fetch('http://localhost:3001/signup', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({NUsername: NUser, NPassword: NPW, NDisplay: NDisplay, isPWValid: isPWValid})\r\n        }).then(\r\n            res => {\r\n                return res.json()\r\n            }\r\n        ).then(\r\n            response => {\r\n                const Response = response.res\r\n                if (Response) {\r\n                    if (isPWValid) {\r\n                        props.GrantAccess(NUser)\r\n                    } else {\r\n                        setUserState(true)\r\n                    }\r\n                } else {\r\n                    setUserState(false)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Welcome to the Signup page! <br />\r\n            { isUserValid ? null : <div>The Username is unavailable!</div> }\r\n            { isPWValid ? null : <div>The Passwords do not match!</div> }\r\n            <form onSubmit={onSubmit}>\r\n                New Username: <input type='text' required ref={NUserRef} /> <br />\r\n                New Password: <input type='text' required ref={NPWRef} /> <br />\r\n                Confirm Password: <input type='text' required ref={NPW2Ref} /> <br />\r\n                Display Name: <input type='text' required ref={NDisplayRef} /> <br />\r\n                <input type='submit' value='signup' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEhD,SAASC,MAAM,CAACC,KAAK,EAAE;EAAA;EACnB,MAAMC,QAAQ,GAAGJ,MAAM,EAAE;EACzB,MAAMK,MAAM,GAAGL,MAAM,EAAE;EACvB,MAAMM,OAAO,GAAGN,MAAM,EAAE;EACxB,MAAMO,WAAW,GAAGP,MAAM,EAAE;EAE5B,MAAM,CAACQ,SAAS,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,WAAW,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElD,SAASW,QAAQ,CAACC,KAAK,EAAE;IACrBA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,KAAK,GAAGX,QAAQ,CAACY,OAAO,CAACC,KAAK;IACpC,MAAMC,GAAG,GAAGb,MAAM,CAACW,OAAO,CAACC,KAAK;IAChC,MAAME,IAAI,GAAGb,OAAO,CAACU,OAAO,CAACC,KAAK;IAClC,MAAMG,QAAQ,GAAGb,WAAW,CAACS,OAAO,CAACC,KAAK;;IAE1C;IACA,IAAIC,GAAG,KAAKC,IAAI,EAAE;MACdV,UAAU,CAAC,KAAK,CAAC;MACjB;IACJ,CAAC,MAAM;MACH,IAAI,CAACD,SAAS,EAAE;QACZC,UAAU,CAAC,IAAI,CAAC;MACpB;IACJ;;IAEA;IACAY,KAAK,CAAC,8BAA8B,EAAE;MAClCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACC,SAAS,EAAEZ,KAAK;QAAEa,SAAS,EAAEV,GAAG;QAAEE,QAAQ,EAAEA,QAAQ;QAAEZ,SAAS,EAAEA;MAAS,CAAC;IACrG,CAAC,CAAC,CAACqB,IAAI,CACHC,GAAG,IAAI;MACH,OAAOA,GAAG,CAACC,IAAI,EAAE;IACrB,CAAC,CACJ,CAACF,IAAI,CACFG,QAAQ,IAAI;MACR,MAAMC,QAAQ,GAAGD,QAAQ,CAACF,GAAG;MAC7B,IAAIG,QAAQ,EAAE;QACV,IAAIzB,SAAS,EAAE;UACXL,KAAK,CAAC+B,WAAW,CAACnB,KAAK,CAAC;QAC5B,CAAC,MAAM;UACHJ,YAAY,CAAC,IAAI,CAAC;QACtB;MACJ,CAAC,MAAM;QACHA,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC,CACJ;EACL;EAEA,oBACI;IAAA,wDACgC;MAAA;MAAA;MAAA;IAAA,QAAM,EAChCD,WAAW,GAAG,IAAI,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuC,EAC5DF,SAAS,GAAG,IAAI,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsC,eAC3D;MAAM,QAAQ,EAAEI,QAAS;MAAA,0CACP;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ;QAAC,GAAG,EAAER;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,oBAAC;QAAA;QAAA;QAAA;MAAA,QAAM,iCACpD;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ;QAAC,GAAG,EAAEC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,oBAAC;QAAA;QAAA;QAAA;MAAA,QAAM,qCAC9C;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ;QAAC,GAAG,EAAEC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,oBAAC;QAAA;QAAA;QAAA;MAAA,QAAM,iCACvD;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ;QAAC,GAAG,EAAEC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,oBAAC;QAAA;QAAA;QAAA;MAAA,QAAM,eACrE;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GAlEQL,MAAM;AAAA,KAANA,MAAM;AAoEf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}