{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shind\\\\OneDrive\\\\Desktop\\\\coding project\\\\blog post\\\\blog_front\\\\src\\\\Pages\\\\OpenBlog.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OpenBlog(props) {\n  _s();\n  const Data = useLocation().state; //get data about Post from App.js\n  const isViewerAuthor = Data.CurrUser == Data.Username; //isViewerAuthor is true if Data.CurrUser = Data.Username, AKA the viewer is the author of the post\n  const [isCommentsOpen, setCommentsOpenState] = useState(false); //comments are not open from the beginning by default\n  const [Comments, setCommentsState] = useState(null);\n\n  //function called to delete the post\n  async function DeletePost() {\n    const PostID = Data.PostID;\n\n    //send a POST request to /deleteblog with FD in its body\n    await fetch('http://localhost:3001/deleteblog', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        PostID: PostID\n      })\n    });\n    props.Login(Data.Username, Data.DisplayName); //go back to the HomePage still logged in as the user\n  }\n\n  async function getComments() {\n    const PostID = Data.PostID;\n\n    //send a GET request to /getcomments with PostID as a parameter\n    const result = await fetch('http://localhost:3001/getcomments/' + PostID);\n\n    //Comments is an array of every comment, and the display name of every commentor\n    const Comments = result.rows;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Title: \", Data.Title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 42\n    }, this), \"Author: \", Data.DisplayName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/jpeg;base64,${Data.Image}`,\n      alt: Data.ImageName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 87\n    }, this), \" \", Data.PostText, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }, this), isViewerAuthor ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: DeletePost,\n      children: \"Delete Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }, this) : null, \" \", isCommentsOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: closeComments,\n      children: \"Close Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getComments,\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 89\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(OpenBlog, \"lYN1CZu66JTy6TeREHNLrAQHAIY=\", false, function () {\n  return [useLocation];\n});\n_c = OpenBlog;\nexport default OpenBlog;\nvar _c;\n$RefreshReg$(_c, \"OpenBlog\");","map":{"version":3,"names":["useLocation","OpenBlog","props","Data","state","isViewerAuthor","CurrUser","Username","isCommentsOpen","setCommentsOpenState","useState","Comments","setCommentsState","DeletePost","PostID","fetch","method","headers","body","JSON","stringify","Login","DisplayName","getComments","result","rows","Title","Image","ImageName","PostText","closeComments"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Pages/OpenBlog.js"],"sourcesContent":["import {useLocation} from 'react-router-dom';\r\n\r\nfunction OpenBlog(props) {\r\n    const Data = useLocation().state; //get data about Post from App.js\r\n    const isViewerAuthor = (Data.CurrUser == Data.Username); //isViewerAuthor is true if Data.CurrUser = Data.Username, AKA the viewer is the author of the post\r\n    const [isCommentsOpen, setCommentsOpenState] = useState(false); //comments are not open from the beginning by default\r\n    const [Comments, setCommentsState] = useState(null);\r\n\r\n    //function called to delete the post\r\n    async function DeletePost() {\r\n        const PostID = Data.PostID\r\n\r\n        //send a POST request to /deleteblog with FD in its body\r\n        await fetch('http://localhost:3001/deleteblog', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({PostID: PostID})\r\n        })\r\n        \r\n        props.Login(Data.Username, Data.DisplayName); //go back to the HomePage still logged in as the user\r\n    }\r\n\r\n    async function getComments() {\r\n        const PostID = Data.PostID\r\n\r\n        //send a GET request to /getcomments with PostID as a parameter\r\n        const result = await fetch('http://localhost:3001/getcomments/' + PostID)\r\n\r\n        //Comments is an array of every comment, and the display name of every commentor\r\n        const Comments = result.rows\r\n    }\r\n\r\n    return (\r\n        <div> {/* diplaying the blog post itself first */}\r\n            <h1>Title: {Data.Title}</h1> <br />\r\n            Author: {Data.DisplayName} <br /><br />\r\n            <img src={`data:image/jpeg;base64,${Data.Image}`} alt={Data.ImageName} /> <br /> {/* Display the image base64 image data as an image */}\r\n            {Data.PostText} <br />\r\n\r\n            {isViewerAuthor ? <button onClick={DeletePost}>Delete Post</button> : null} {/* Only Displays if isViewerAuthor is true-if the viewer of the post is the author themselves, otherwise displays null. This button deletes the post */}\r\n            \r\n            {/* Button to open the Comments section */}\r\n            {isCommentsOpen ? <button onClick={closeComments}>Close Comments</button> : <button onClick={getComments}>Comments</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenBlog;"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAAC;AAE7C,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACrB,MAAMC,IAAI,GAAGH,WAAW,EAAE,CAACI,KAAK,CAAC,CAAC;EAClC,MAAMC,cAAc,GAAIF,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACI,QAAS,CAAC,CAAC;EACzD,MAAM,CAACC,cAAc,EAAEC,oBAAoB,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAChE,MAAM,CAACC,QAAQ,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;;EAEnD;EACA,eAAeG,UAAU,GAAG;IACxB,MAAMC,MAAM,GAAGX,IAAI,CAACW,MAAM;;IAE1B;IACA,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACN,MAAM,EAAEA;MAAM,CAAC;IACzC,CAAC,CAAC;IAEFZ,KAAK,CAACmB,KAAK,CAAClB,IAAI,CAACI,QAAQ,EAAEJ,IAAI,CAACmB,WAAW,CAAC,CAAC,CAAC;EAClD;;EAEA,eAAeC,WAAW,GAAG;IACzB,MAAMT,MAAM,GAAGX,IAAI,CAACW,MAAM;;IAE1B;IACA,MAAMU,MAAM,GAAG,MAAMT,KAAK,CAAC,oCAAoC,GAAGD,MAAM,CAAC;;IAEzE;IACA,MAAMH,QAAQ,GAAGa,MAAM,CAACC,IAAI;EAChC;EAEA,oBACI;IAAA,6BACI;MAAA,sBAAYtB,IAAI,CAACuB,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,oBAAC;MAAA;MAAA;MAAA;IAAA,QAAM,cAC1BvB,IAAI,CAACmB,WAAW,oBAAE;MAAA;MAAA;MAAA;IAAA,QAAM;MAAA;MAAA;MAAA;IAAA,QAAM,eACvC;MAAK,GAAG,EAAG,0BAAyBnB,IAAI,CAACwB,KAAM,EAAE;MAAC,GAAG,EAAExB,IAAI,CAACyB;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,oBAAC;MAAA;MAAA;MAAA;IAAA,QAAM,OAC/EzB,IAAI,CAAC0B,QAAQ,oBAAE;MAAA;MAAA;MAAA;IAAA,QAAM,EAErBxB,cAAc,gBAAG;MAAQ,OAAO,EAAEQ,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,GAAG,IAAI,OAGzEL,cAAc,gBAAG;MAAQ,OAAO,EAAEsB,aAAc;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,gBAAG;MAAQ,OAAO,EAAEP,WAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QACzH;AAEd;AAAC,GA3CQtB,QAAQ;EAAA,QACAD,WAAW;AAAA;AAAA,KADnBC,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}