{"ast":null,"code":"import _slicedToArray from\"C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{React,useRef,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostBlog(props){var TitleRef=useRef();var ImageRef=useRef();var PostTextRef=useRef();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),Cats=_useState2[0],setCats=_useState2[1];var PostCats=useRef([]);//runs only on mount\nuseEffect(function(){GetAllCats();},[]);function addpost(event){event.preventDefault();//prevent form from refreshing upon submit\n//get form data\nvar Title=TitleRef.current.value;var Image=ImageRef.current.files[0];var PostText=PostTextRef.current.value;var Author=props.Author;//append form data in FormData object, FD\nvar FD=new FormData();FD.append('Image',Image);FD.append('Title',Title);FD.append('PostText',PostText);FD.append('AuthorUsername',Author);FD.append('Categories',PostCats.current);//send a POST request to backend to post the blog with data FD\nfetch('/postblog',{method:'POST',body:FD}).then(function(res){return res.json();}).then(props.Login(Author,props.DisplayName));}function GetAllCats(){fetch('/getallcats').then(//fetches all the categories from backend\nfunction(res){return res.json();}).then(function(response){var PostCats=response.res.filter(function(Cat){return Cat.categoryid!==0;});//response is an array of Categories, and set PostCats to be all categories except All with CategoryID 0\nsetCats(PostCats);//sets the Categories state to the response\n});}function AddCat(CatID){PostCats.current.push(CatID);}return/*#__PURE__*/_jsxs(\"div\",{children:[\"Create a Blog! \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:addpost,children:[\" \",\"Post Title: \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,ref:TitleRef}),\" \",/*#__PURE__*/_jsx(\"br\",{}),\"Categories: \",Cats?Cats.map(function(Cat){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onClick:function onClick(){return AddCat(Cat.categoryid);},readOnly:true}),\" \",Cat.category]},Cat.categoryid);}):null,\" \",/*#__PURE__*/_jsx(\"br\",{}),\" \",\"Post Image: \",/*#__PURE__*/_jsx(\"input\",{type:\"file\",required:true,ref:ImageRef}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{required:true,ref:PostTextRef,rows:\"4\",cols:\"50\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"submit\"})]})]});}export default PostBlog;","map":{"version":3,"names":["React","useRef","useState","useEffect","PostBlog","props","TitleRef","ImageRef","PostTextRef","Cats","setCats","PostCats","GetAllCats","addpost","event","preventDefault","Title","current","value","Image","files","PostText","Author","FD","FormData","append","fetch","method","body","then","res","json","Login","DisplayName","response","filter","Cat","categoryid","AddCat","CatID","push","map","category"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Pages/PostBlog.js"],"sourcesContent":["import { React, useRef, useState, useEffect } from 'react';\r\n\r\nfunction PostBlog(props) {\r\n    const TitleRef = useRef();\r\n    const ImageRef = useRef();\r\n    const PostTextRef = useRef();\r\n    const [Cats, setCats] = useState(null)\r\n    const PostCats = useRef([]);\r\n\r\n    //runs only on mount\r\n    useEffect(() => {\r\n        GetAllCats()\r\n    }, [])\r\n\r\n    function addpost (event) {\r\n        event.preventDefault(); //prevent form from refreshing upon submit\r\n\r\n        //get form data\r\n        const Title = TitleRef.current.value;\r\n        const Image = ImageRef.current.files[0];\r\n        const PostText = PostTextRef.current.value;\r\n        const Author = props.Author;\r\n\r\n        //append form data in FormData object, FD\r\n        const FD = new FormData();\r\n        FD.append('Image', Image);\r\n        FD.append('Title', Title);\r\n        FD.append('PostText', PostText);\r\n        FD.append('AuthorUsername', Author);\r\n        FD.append('Categories', PostCats.current);\r\n\r\n        //send a POST request to backend to post the blog with data FD\r\n        fetch('/postblog', {\r\n            method: 'POST',\r\n            body: FD\r\n        }).then(\r\n            res => res.json()\r\n        ).then(\r\n            props.Login(Author, props.DisplayName)\r\n        )\r\n    }\r\n\r\n    function GetAllCats() {\r\n        fetch('/getallcats').then( //fetches all the categories from backend\r\n            res => res.json()\r\n        ).then(\r\n            response => {\r\n                const PostCats = response.res.filter(Cat => Cat.categoryid !== 0) //response is an array of Categories, and set PostCats to be all categories except All with CategoryID 0\r\n                \r\n                setCats(PostCats) //sets the Categories state to the response\r\n            }\r\n        )\r\n    }\r\n\r\n    function AddCat(CatID) {\r\n        PostCats.current.push(CatID)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            Create a Blog! <br />\r\n            <form onSubmit={addpost}> {/* form calls onSubmit() method on submittion of form */}\r\n                Post Title: <input type='text' required ref={TitleRef} /> <br />\r\n                {/* Displays the categories once it is fetched */}\r\n                Categories: {Cats ? Cats.map(Cat => {\r\n                    return (\r\n                        <div key={Cat.categoryid}>\r\n                            <input type='checkbox' onClick={() => AddCat(Cat.categoryid)} readOnly/> {/* Checkbox for category, made checkbox readonly for this method as we re-render each time it is clicked */}\r\n                            {Cat.category}\r\n                        </div>\r\n                    )\r\n                }) : null} <br /> {/* If Cats has been fetched, display the category selection option */}\r\n                Post Image: <input type='file' required ref={ImageRef} /> <br />\r\n                <textarea required ref={PostTextRef} rows='4' cols='50'></textarea> <br />\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostBlog;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}