{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shind\\\\OneDrive\\\\Desktop\\\\coding project\\\\blog post\\\\blog_front\\\\src\\\\Components\\\\Categories.js\",\n  _s = $RefreshSig$();\nimport useState from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Categories(props) {\n  _s();\n  const [Cats, setCats] = useState(null);\n  const [SelectedCats, setSelectedCats] = useState([{\n    categoryid: 0,\n    category: 'All'\n  }]);\n  const [isChecked, setChecked] = useState(false);\n\n  //runs only on mount\n  useEffect(() => {\n    GetAllCats();\n  }, []);\n  function GetAllCats() {\n    fetch('http://localhost:3001/getallcats').then(\n    //fetches all the categories from backend\n    res => {\n      return res.json();\n    }).then(response => {\n      const AllCats = response.res; //response is an array of Categories\n      setCats(AllCats); //sets the Categories state to the response\n\n      props.GetBlogs(SelectedCats); //get all the blogs for all categories after the categories have been received\n    });\n  }\n\n  function CatClicked() {\n    console.log('hi');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Cats ? Cats.map(Cat => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: CatClicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), Cat.category]\n      }, Cat.categoryid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Categories, \"1YMLQj2jMrpluBQrgMs4ADFWth8=\");\n_c = Categories;\nexport default Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["useState","Categories","props","Cats","setCats","SelectedCats","setSelectedCats","categoryid","category","isChecked","setChecked","useEffect","GetAllCats","fetch","then","res","json","response","AllCats","GetBlogs","CatClicked","console","log","map","Cat"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Components/Categories.js"],"sourcesContent":["import useState from 'react';\r\n\r\nfunction Categories(props) {\r\n    const [Cats, setCats] = useState(null)\r\n    const [SelectedCats, setSelectedCats] = useState([{ categoryid: 0, category: 'All'}])\r\n    const [isChecked, setChecked] = useState(false)\r\n\r\n    //runs only on mount\r\n    useEffect( () => {\r\n        GetAllCats()\r\n    }, [])\r\n\r\n    function GetAllCats() {\r\n        fetch('http://localhost:3001/getallcats').then( //fetches all the categories from backend\r\n            res => {\r\n                return res.json()\r\n            }\r\n        ).then(\r\n            response => {\r\n                const AllCats = response.res //response is an array of Categories\r\n                setCats(AllCats) //sets the Categories state to the response\r\n\r\n                props.GetBlogs(SelectedCats) //get all the blogs for all categories after the categories have been received\r\n            }\r\n        )\r\n    }\r\n\r\n    function CatClicked() {\r\n        console.log('hi')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Displays All Categories if it is not null */}\r\n            {Cats ? Cats.map(Cat => {\r\n                return (\r\n                    <div key={Cat.categoryid}>\r\n                        <input type='checkbox' onClick={CatClicked}/>\r\n                        {Cat.category}\r\n                    </div>\r\n                )\r\n            }) : null}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Categories;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,OAAO;AAAC;AAE7B,SAASC,UAAU,CAACC,KAAK,EAAE;EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC;IAAEO,UAAU,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC,CAAC;EACrF,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAW,SAAS,CAAE,MAAM;IACbC,UAAU,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,SAASA,UAAU,GAAG;IAClBC,KAAK,CAAC,kCAAkC,CAAC,CAACC,IAAI;IAAE;IAC5CC,GAAG,IAAI;MACH,OAAOA,GAAG,CAACC,IAAI,EAAE;IACrB,CAAC,CACJ,CAACF,IAAI,CACFG,QAAQ,IAAI;MACR,MAAMC,OAAO,GAAGD,QAAQ,CAACF,GAAG,EAAC;MAC7BX,OAAO,CAACc,OAAO,CAAC,EAAC;;MAEjBhB,KAAK,CAACiB,QAAQ,CAACd,YAAY,CAAC,EAAC;IACjC,CAAC,CACJ;EACL;;EAEA,SAASe,UAAU,GAAG;IAClBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACrB;EAEA,oBACI;IAAA,UAEKnB,IAAI,GAAGA,IAAI,CAACoB,GAAG,CAACC,GAAG,IAAI;MACpB,oBACI;QAAA,wBACI;UAAO,IAAI,EAAC,UAAU;UAAC,OAAO,EAAEJ;QAAW;UAAA;UAAA;UAAA;QAAA,QAAE,EAC5CI,GAAG,CAAChB,QAAQ;MAAA,GAFPgB,GAAG,CAACjB,UAAU;QAAA;QAAA;QAAA;MAAA,QAGlB;IAEd,CAAC,CAAC,GAAG;EAAI;IAAA;IAAA;IAAA;EAAA,QACP;AAGd;AAAC,GA3CQN,UAAU;AAAA,KAAVA,UAAU;AA6CnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}