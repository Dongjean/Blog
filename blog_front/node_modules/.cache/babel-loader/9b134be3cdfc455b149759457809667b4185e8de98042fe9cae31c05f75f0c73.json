{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shind\\\\OneDrive\\\\Desktop\\\\coding project\\\\blog post\\\\blog_front\\\\src\\\\Pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport BlogPost from '../Components/BlogPost.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(props) {\n  _s();\n  const [Posts, setPosts] = useState(null);\n  const [Cats, setCats] = useState(null);\n  const [SelectedCats, setSelectedCats] = useState([{\n    categoryid: 0,\n    category: 'All'\n  }]);\n  const CurrUser = props.CurrUser;\n\n  //runs only on mount\n  useEffect(() => {\n    GetAllCats();\n  }, []);\n  function GetBlogs(Cats) {\n    var StrCats = '';\n    Cats.map(Cat => {\n      return StrCats += Cat.categoryid + ',';\n    });\n    fetch('http://localhost:3001/getblogs/' + StrCats).then(\n    //fetches the blog posts under the requested categories from backend\n    res => {\n      return res.json();\n    }).then(response => {\n      const Posts = response.res; //response is an array of Posts if blog posts exists, and null otherwise\n      setPosts(Posts); //sets the Posts state to the response\n    });\n  }\n\n  function GetAllCats() {\n    fetch('http://localhost:3001/getallcats').then(\n    //fetches all the categories from backend\n    res => {\n      return res.json();\n    }).then(response => {\n      var AllCats = response.res; //response is an array of Categories\n      AllCats.push(SelectedCats);\n      console.log(AllCats);\n      setSelectedCats(AllCats);\n      setCats(AllCats); //sets the Categories state to the response\n\n      GetBlogs(AllCats); //get all the blogs for all categories after the categories have been received\n    });\n  }\n\n  function onClick(Post) {\n    props.OpenBlog(Post);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [SelectedCats ? SelectedCats.map(Cat => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Cat.category\n      }, Cat.categoryid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    }) : null, Posts ? Posts.map(Post => {\n      {/* iterate through the Posts array if Posts is not null, and each post is Post */}\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onClick(Post),\n          children: [\" \", /*#__PURE__*/_jsxDEV(BlogPost, {\n            Post: Post,\n            CurrUser: CurrUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, Post.PostID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There are no posts yet :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 18\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"hdebQgWm+T1+Nf/6E5KCR/bDcv4=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","BlogPost","Main","props","Posts","setPosts","Cats","setCats","SelectedCats","setSelectedCats","categoryid","category","CurrUser","GetAllCats","GetBlogs","StrCats","map","Cat","fetch","then","res","json","response","AllCats","push","console","log","onClick","Post","OpenBlog","PostID"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Pages/Main.js"],"sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport BlogPost from '../Components/BlogPost.js'\r\n\r\nfunction Main(props) {\r\n    const [Posts, setPosts] = useState(null)\r\n    const [Cats, setCats] = useState(null)\r\n    const [SelectedCats, setSelectedCats] = useState([{ categoryid: 0, category: 'All'}])\r\n\r\n    const CurrUser = props.CurrUser;\r\n\r\n    //runs only on mount\r\n    useEffect( () => {\r\n        GetAllCats()\r\n    }, [])\r\n\r\n    function GetBlogs(Cats) {\r\n        var StrCats = '';\r\n        Cats.map(Cat => {return StrCats += Cat.categoryid + ','})\r\n\r\n        fetch('http://localhost:3001/getblogs/' + StrCats).then( //fetches the blog posts under the requested categories from backend\r\n            res => {\r\n                return res.json()\r\n            }\r\n        ).then(\r\n            response => {\r\n                const Posts = response.res //response is an array of Posts if blog posts exists, and null otherwise\r\n                setPosts(Posts) //sets the Posts state to the response\r\n            }\r\n        )\r\n    }\r\n\r\n    function GetAllCats() {\r\n        fetch('http://localhost:3001/getallcats').then( //fetches all the categories from backend\r\n            res => {\r\n                return res.json()\r\n            }\r\n        ).then(\r\n            response => {\r\n                var AllCats = response.res //response is an array of Categories\r\n                AllCats.push(SelectedCats)\r\n                console.log(AllCats)\r\n                setSelectedCats(AllCats)\r\n                setCats(AllCats) //sets the Categories state to the response\r\n\r\n                GetBlogs(AllCats) //get all the blogs for all categories after the categories have been received\r\n            }\r\n        )\r\n    }\r\n\r\n    function onClick(Post) {\r\n        props.OpenBlog(Post)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {SelectedCats ? SelectedCats.map(Cat => {\r\n                return (\r\n                    <div key={Cat.categoryid}>\r\n                        {Cat.category}\r\n                    </div>\r\n                )\r\n            }) : null}\r\n            \r\n            {Posts ? Posts.map(Post => { {/* iterate through the Posts array if Posts is not null, and each post is Post */}\r\n                return (\r\n                    <div key={Post.PostID}>\r\n                        <button onClick={() => onClick(Post)}> {/* Call the onClick method with parameter Post */}\r\n                            <BlogPost Post={Post} CurrUser={CurrUser} /> {/* Display the specific Blog Post, passing in information of Post as a prop Post */}\r\n                        </button>\r\n                        <br />\r\n                    </div>\r\n                )\r\n            }) : <div>There are no posts yet :(</div> } {/* If Posts is null-if there are no Posts */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}