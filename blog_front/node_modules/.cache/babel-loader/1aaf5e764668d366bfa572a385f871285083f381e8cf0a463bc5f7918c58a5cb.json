{"ast":null,"code":"import _slicedToArray from\"C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{React,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function LikesSection(props){var CurrUser=props.CurrUser;var PostID=props.PostID;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),LikesCount=_useState2[0],setLikesCount=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLiked=_useState4[0],setLikedState=_useState4[1];//this runs only once on mount\nuseEffect(function(){GetLikesCount();//get number of likes no matter what\nif(CurrUser){GetLikeState();//only run if user is logged in\n}},[]);//method to get the number of likes for the post\nfunction GetLikesCount(){//send a GET request to /getlikes with PostID as a parameter\nfetch('http://localhost:3001/getlikescount/'+PostID).then(function(res){return res.json();}).then(function(response){var LikesCount=response.res;setLikesCount(LikesCount);//update the information stored in the LikesCount State\n});}function Like(event){event.stopPropagation();//prevents the onClick of the button in the parent class from interfering with this like/unlike button\nfetch('http://localhost:3001/addlike',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({PostID:PostID,CurrUser:CurrUser})}).then(function(res){GetLikesCount();}//update the likes count shown only after the post request is successful\n);setLikedState(true);//post is now liked\n}function Unlike(event){event.stopPropagation();//prevents the onClick of the button in the parent class from interfering with this like/unlike button\nfetch('http://localhost:3001/removelike',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({PostID:PostID,CurrUser:CurrUser})}).then(function(res){GetLikesCount();}//update the likes count shown only after the post request is successful\n);setLikedState(false);//post is now unliked\n}//function called to get the state of whether or not the post is liked by user\nfunction GetLikeState(){fetch('http://localhost:3001/getlikestate/'+PostID+'/'+CurrUser).then(function(res){return res.json();}).then(function(response){setLikedState(response.res);});}return/*#__PURE__*/_jsxs(\"div\",{children:[\"Likes: \",LikesCount,\" \",/*#__PURE__*/_jsx(\"br\",{}),CurrUser?//If client is logged in, then show Like button if post is not liked, and vice versa \nisLiked?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{onClick:Unlike,children:\"Unlike!\"}),\" \",/*#__PURE__*/_jsx(\"br\",{})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{onClick:Like,children:\"Like!\"}),\" \",/*#__PURE__*/_jsx(\"br\",{})]}):null]});}export default LikesSection;","map":{"version":3,"names":["React","useState","useEffect","LikesSection","props","CurrUser","PostID","LikesCount","setLikesCount","isLiked","setLikedState","GetLikesCount","GetLikeState","fetch","then","res","json","response","Like","event","stopPropagation","method","headers","body","JSON","stringify","Unlike"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Components/LikesSection.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\r\n\r\nfunction LikesSection(props) {\r\n    const CurrUser = props.CurrUser;\r\n    const PostID = props.PostID;\r\n    const [LikesCount, setLikesCount] = useState(0);\r\n    const [isLiked, setLikedState] = useState(false);\r\n\r\n    //this runs only once on mount\r\n    useEffect(() => {\r\n        GetLikesCount(); //get number of likes no matter what\r\n        if (CurrUser) {\r\n            GetLikeState(); //only run if user is logged in\r\n        }\r\n    }, [])\r\n\r\n    //method to get the number of likes for the post\r\n    function GetLikesCount() {\r\n        //send a GET request to /getlikes with PostID as a parameter\r\n        fetch('http://localhost:3001/getlikescount/' + PostID).then(\r\n            res => res.json()\r\n        ).then(\r\n            response => {\r\n                const LikesCount = response.res\r\n                setLikesCount(LikesCount) //update the information stored in the LikesCount State\r\n            }\r\n        )\r\n    }\r\n\r\n    function Like(event) {\r\n        event.stopPropagation() //prevents the onClick of the button in the parent class from interfering with this like/unlike button\r\n        fetch('http://localhost:3001/addlike', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({PostID: PostID, CurrUser: CurrUser})\r\n        }).then(\r\n            res => {\r\n            GetLikesCount()\r\n            } //update the likes count shown only after the post request is successful\r\n        )\r\n        setLikedState(true) //post is now liked\r\n    }\r\n\r\n    function Unlike(event) {\r\n        event.stopPropagation() //prevents the onClick of the button in the parent class from interfering with this like/unlike button\r\n        fetch('http://localhost:3001/removelike', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({PostID: PostID, CurrUser: CurrUser})\r\n        }).then(\r\n            res => {\r\n            GetLikesCount()\r\n            } //update the likes count shown only after the post request is successful\r\n        )\r\n        setLikedState(false) //post is now unliked\r\n    }\r\n\r\n    //function called to get the state of whether or not the post is liked by user\r\n    function GetLikeState() {\r\n        fetch('http://localhost:3001/getlikestate/' + PostID + '/' + CurrUser).then(\r\n            res => res.json()\r\n        ).then(\r\n            response => {\r\n                setLikedState(response.res)\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* Displays the number of likes of the post no matter what */}\r\n            Likes: {LikesCount} <br />\r\n\r\n            {/* Only Display the option to like or unlike if loggedin-if CurrUser is not null */}\r\n            {CurrUser ?\r\n\r\n            //If client is logged in, then show Like button if post is not liked, and vice versa \r\n            (isLiked ? \r\n                <div>\r\n                    <div onClick={Unlike}>Unlike!</div> <br />\r\n                </div>: \r\n                <div>\r\n                    <div onClick={Like}>Like!</div> <br />\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikesSection;"],"mappings":"yJAAA,OAASA,KAAK,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,wFAEnD,QAASC,aAAY,CAACC,KAAK,CAAE,CACzB,GAAMC,SAAQ,CAAGD,KAAK,CAACC,QAAQ,CAC/B,GAAMC,OAAM,CAAGF,KAAK,CAACE,MAAM,CAC3B,cAAoCL,QAAQ,CAAC,CAAC,CAAC,wCAAxCM,UAAU,eAAEC,aAAa,eAChC,eAAiCP,QAAQ,CAAC,KAAK,CAAC,yCAAzCQ,OAAO,eAAEC,aAAa,eAE7B;AACAR,SAAS,CAAC,UAAM,CACZS,aAAa,EAAE,CAAE;AACjB,GAAIN,QAAQ,CAAE,CACVO,YAAY,EAAE,CAAE;AACpB,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,QAASD,cAAa,EAAG,CACrB;AACAE,KAAK,CAAC,sCAAsC,CAAGP,MAAM,CAAC,CAACQ,IAAI,CACvD,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAI,EAAE,GACpB,CAACF,IAAI,CACF,SAAAG,QAAQ,CAAI,CACR,GAAMV,WAAU,CAAGU,QAAQ,CAACF,GAAG,CAC/BP,aAAa,CAACD,UAAU,CAAC,CAAC;AAC9B,CAAC,CACJ,CACL,CAEA,QAASW,KAAI,CAACC,KAAK,CAAE,CACjBA,KAAK,CAACC,eAAe,EAAE,CAAC;AACxBP,KAAK,CAAC,+BAA+B,CAAE,CACnCQ,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAC7CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACnB,MAAM,CAAEA,MAAM,CAAED,QAAQ,CAAEA,QAAQ,CAAC,CAC7D,CAAC,CAAC,CAACS,IAAI,CACH,SAAAC,GAAG,CAAI,CACPJ,aAAa,EAAE,CACf,CAAE;AAAA,CACL,CACDD,aAAa,CAAC,IAAI,CAAC,CAAC;AACxB,CAEA,QAASgB,OAAM,CAACP,KAAK,CAAE,CACnBA,KAAK,CAACC,eAAe,EAAE,CAAC;AACxBP,KAAK,CAAC,kCAAkC,CAAE,CACtCQ,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAC7CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACnB,MAAM,CAAEA,MAAM,CAAED,QAAQ,CAAEA,QAAQ,CAAC,CAC7D,CAAC,CAAC,CAACS,IAAI,CACH,SAAAC,GAAG,CAAI,CACPJ,aAAa,EAAE,CACf,CAAE;AAAA,CACL,CACDD,aAAa,CAAC,KAAK,CAAC,CAAC;AACzB,CAEA;AACA,QAASE,aAAY,EAAG,CACpBC,KAAK,CAAC,qCAAqC,CAAGP,MAAM,CAAG,GAAG,CAAGD,QAAQ,CAAC,CAACS,IAAI,CACvE,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAI,EAAE,GACpB,CAACF,IAAI,CACF,SAAAG,QAAQ,CAAI,CACRP,aAAa,CAACO,QAAQ,CAACF,GAAG,CAAC,CAC/B,CAAC,CACJ,CACL,CAGA,mBACI,iCAEYR,UAAU,kBAAE,aAAM,CAGzBF,QAAQ,CAET;AACCI,OAAO,cACJ,oCACI,YAAK,OAAO,CAAEiB,MAAO,qBAAc,kBAAC,aAAM,GACxC,cACN,oCACI,YAAK,OAAO,CAAER,IAAK,mBAAY,kBAAC,aAAM,GACpC,CACN,IAAI,GACN,CAEd,CAEA,cAAef,aAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}