{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shind\\\\OneDrive\\\\Desktop\\\\coding project\\\\blog post\\\\blog_front\\\\src\\\\Components\\\\AddCategory.js\",\n  _s = $RefreshSig$();\nimport { React, useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddCategory(props) {\n  _s();\n  const CategoryNameRef = useRef();\n  function onSubmit(event) {\n    event.preventDefault(); //prevent form from refreshing upon submit\n\n    const CategoryName = CategoryNameRef.current;\n    fetch('http://localhost:3001/addcategory', {\n      //Post request to add new category\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        CategoryName: CategoryName\n      })\n    }).then(res => {\n      Login(props.CurrUser);\n    } //update the likes count shown only after the post request is successful\n    );\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Category!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [\"Category Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        ref: CategoryNameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(AddCategory, \"kOxheGHBjhSHI0sCpTqst9eCoPc=\");\n_c = AddCategory;\nexport default AddCategory;\nvar _c;\n$RefreshReg$(_c, \"AddCategory\");","map":{"version":3,"names":["React","useRef","useState","useEffect","AddCategory","props","CategoryNameRef","onSubmit","event","preventDefault","CategoryName","current","fetch","method","headers","body","JSON","stringify","then","res","Login","CurrUser"],"sources":["C:/Users/shind/OneDrive/Desktop/coding project/blog post/blog_front/src/Components/AddCategory.js"],"sourcesContent":["import { React, useRef, useState, useEffect } from 'react';\r\n\r\nfunction AddCategory(props) {\r\n    const CategoryNameRef = useRef()\r\n\r\n    function onSubmit(event) {\r\n        event.preventDefault(); //prevent form from refreshing upon submit\r\n\r\n        const CategoryName = CategoryNameRef.current\r\n\r\n        fetch('http://localhost:3001/addcategory', { //Post request to add new category\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({CategoryName: CategoryName})\r\n        }).then(\r\n            res => {\r\n                Login(props.CurrUser)\r\n            } //update the likes count shown only after the post request is successful\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Add Category!</h1> <br />\r\n            <form onSubmit={onSubmit}>\r\n                Category Name: <input type='text' required ref={CategoryNameRef} />\r\n                <input type='submit' value='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCategory;"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE3D,SAASC,WAAW,CAACC,KAAK,EAAE;EAAA;EACxB,MAAMC,eAAe,GAAGL,MAAM,EAAE;EAEhC,SAASM,QAAQ,CAACC,KAAK,EAAE;IACrBA,KAAK,CAACC,cAAc,EAAE,CAAC,CAAC;;IAExB,MAAMC,YAAY,GAAGJ,eAAe,CAACK,OAAO;IAE5CC,KAAK,CAAC,mCAAmC,EAAE;MAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACP,YAAY,EAAEA;MAAY,CAAC;IACrD,CAAC,CAAC,CAACQ,IAAI,CACHC,GAAG,IAAI;MACHC,KAAK,CAACf,KAAK,CAACgB,QAAQ,CAAC;IACzB,CAAC,CAAC;IAAA,CACL;EACL;;EACA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,oBAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eAC7B;MAAM,QAAQ,EAAEd,QAAS;MAAA,2CACN;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ;QAAC,GAAG,EAAED;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAG,eACnE;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GA3BQF,WAAW;AAAA,KAAXA,WAAW;AA6BpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}